#define LIGHT_THRESHOLD 40
#define SPEED 50
#define turn(direction) RotateMotor(OUT_C, 22, direction);
#define DISTANCE_THRESHOLD 25

task driveAndDetect() {
  RotateMotor(OUT_A, 50, -90);
  
  while (SensorUS(IN_1) < DISTANCE_THRESHOLD) {
    OnRev(OUT_B, SPEED);
  }
  Off(OUT_B);
  RotateMotor(OUT_A, 50, 90);
}

task steer() {
  if (Sensor(IN_2) > LIGHT_THRESHOLD) {
    turn(25);
    until(Sensor(IN_2) < LIGHT_THRESHOLD);
    //Wait(150);
    turn(-25);
  }
}

task main() {
  SetSensorLight(IN_2);
  SetSensorLowspeed(IN_1);
  
  Precedes(driveAndDetect(), steer());
  PlayToneEx(262,400,4,FALSE); Wait(1000);

}



// Parallel tasks
// Doesn't stop exactly straight away because the contents of the while loop
// have to execute before it can turn off.
